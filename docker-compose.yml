version: '3.8'

services:
  db:
    image: postgres:16.2 # Используем указанную вами версию Postgres
    volumes:
      # Названный том для персистентного хранения данных БД.
      # Платформа хостинга должна управлять этим томом.
      - postgres_data:/var/lib/postgresql/data

  web:
    build: . # Указывает Docker Compose собрать образ из Dockerfile в текущей директории
    # Команда для выполнения при запуске контейнера.
    # Сначала выполняем миграции, затем запускаем Gunicorn.
    # Обратите внимание: миграции будут выполняться каждый раз при старте контейнера.
    # Для продакшена более надежным может быть выполнение миграций отдельно.
    command: bash -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 mysite.wsgi:application"
    depends_on:
      # Гарантирует, что сервис 'db' запустится перед 'web'.
      - db
    environment:
      # Переменные окружения, которые ожидаются внутри контейнера.
      # Их значения ДОЛЖНЫ быть установлены через интерфейс вашего хостинга.
      - SECRET_KEY # Чувствительный ключ Django.
      - DJANGO_SETTINGS_MODULE=mysite.settings # Укажите путь к файлу settings.py.
      - DJANGO_DEBUG=False # Отключаем режим отладки для продакшена.
      # Переменные для отправки email. Их значения также предоставляются хостингом.
      - EMAIL_HOST_PASSWORD
      - DEFAULT_FROM_EMAIL
      - EMAIL_HOST_USER
      # Переменные для подключения к базе данных.
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST # В settings.py используйте 'db' как хост для подключения к БД.
      - POSTGRES_PORT=5432 # Можно добавить порт явно, если он отличается от дефолтного.
    # volumes:
      # Если вы храните статику/медиа локально и не используете облачное хранилище,
      # раскомментируйте и настройте тома здесь.
      # - static_volume:/app/staticfiles
      # - media_volume:/app/mediafiles

volumes:
  # Определение названного тома для данных БД.
  postgres_data:
  # (Опционально) Названные тома для статики и медиа.
  # static_volume:
  # media_volume: